{"version":3,"sources":["webpack:///./src/components/ratings/ratings.style.js","webpack:///./src/components/ratings/index.js","webpack:///./src/containers/global/contact-area/contact-two/contact.style.js","webpack:///./src/containers/global/contact-area/contact-two/index.js","webpack:///./src/components/box-icon/layout-four/box-icon.style.js","webpack:///./src/components/box-icon/layout-four/index.js","webpack:///./src/components/image.js"],"names":["RatingsWrap","styled","div","props","mt","mb","Ratings","rating","restProps","ratingRound","Math","round","ratingItems","disableRating","i","push","key","className","SectionWrap","BackgroundImage","device","medium","ImageBox","ContactInfoBox","ContactArea","sectionStyle","imgBoxStyle","rightBoxStyle","boxIconStyle","ratingStyle","textStyle","contactData","info","siteMetadata","contact","phone","email","customers","clients","bg_image","bgImage","childImageSharp","fluid","contact_image","contactImg","alignitems","lg","alt","ml","textalign","as","display","path","icon","heading","title","defaultProps","wrapperStyle","iconStyle","fontSize","mr","fontweight","titleStyle","lineHeight","responsive","large","BoxIconWrap","pl","BoxIconMarker","color","theme","colors","secondary","BoxIconInfo","BoxIconTitle","h5","css","themeColor","BoxIconHeading","h6","BoxIconDesc","p","BoxIcon","desc","infoStyle","descStyle","headingStyle","NonStretchedImage","alignment","normalizedProps","align","aspectRatio","presentationWidth","style","position","isAbsolute","width","maxWidth","margin"],"mappings":"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","file":"c1de7e7a473176a3bb2ab5f3babb8f5d8a48a800-c6d9edb7da0a25043ab7.js","sourcesContent":["import styled from 'styled-components'\n\nexport const RatingsWrap = styled.div `\n    color: #fb0;\n    font-size: 24px;\n    margin-top: ${props => props.mt};\n    margin-bottom: ${props => props.mb};\n    i{\n        &:not(:first-child){\n            margin-left: 11px;\n        }\n    }\n`;","import React from 'react'\nimport { MdStar } from \"react-icons/md\";\nimport {RatingsWrap} from './ratings.style.js'\n\nconst Ratings = ({rating, ...restProps}) => {\n    const ratingRound = Math.round(rating)\n    const ratingItems = [];\n    const disableRating = [];\n    for(let i=1; i <= ratingRound; i++){\n        ratingItems.push(<MdStar key={`rating-${i}`}/>)\n    }\n\n    if(rating < 5){\n        for(let i=1; i <= 5 - ratingRound; i++){\n            disableRating.push(<MdStar className=\"disable\" key={`disable-rating-${i}`}/>)\n        }\n    }\n    return (\n        <RatingsWrap {...restProps}>\n            {ratingItems}\n            {disableRating}\n        </RatingsWrap>\n    )\n}\n\nexport default Ratings; ","import styled from \"styled-components\";\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport {device} from '../../../../theme'\r\n\r\nexport const SectionWrap = styled(BackgroundImage) `\r\n    padding-top: 100px;\r\n    background-color: #eff2f6;\r\n    @media ${device.medium}{\r\n        padding-top: 75px;\r\n    }\r\n`; \r\n\r\nexport const ImageBox = styled.div `\r\n    @media ${device.medium}{\r\n        margin-bottom: 57px;\r\n    }\r\n`;\r\n\r\nexport const ContactInfoBox = styled.div `\r\n    @media ${device.medium}{\r\n        margin-bottom: 45px;\r\n    }\r\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { MdPhone, MdEmail } from \"react-icons/md\";\nimport {Container, Row, Col, Box} from '../../../../components/ui/wrapper'\nimport Heading from '../../../../components/ui/heading'\nimport Text from '../../../../components/ui/text'\nimport Image from '../../../../components/image'\nimport Ratings from '../../../../components/ratings'\nimport BoxIcon from '../../../../components/box-icon/layout-four'\nimport Anchor from '../../../../components/ui/anchor'\nimport {SectionWrap, ImageBox, ContactInfoBox} from './contact.style'\n\nconst ContactArea = ({sectionStyle, imgBoxStyle, rightBoxStyle, boxIconStyle, ratingStyle, textStyle}) => {\n    const contactData = useStaticQuery(graphql `\n        query AboutContactQuery {\n            info: site {\n                siteMetadata {\n                    contact {\n                        phone\n                        email\n                        rating\n                        customers\n                        clients\n                    }\n                }\n            }\n            bgImage: file(relativePath: {eq: \"images/bg/contact-bg.jpg\"}) {\n                childImageSharp {\n                    fluid(maxHeight: 520, maxWidth: 1920, quality: 100) {\n                        ...GatsbyImageSharpFluid_tracedSVG\n                    }\n                }\n            }\n            contactImg: file(relativePath: {eq: \"images/contact-image.png\"}) {\n                childImageSharp {\n                    fluid(maxHeight: 572, maxWidth: 587, quality: 100) {\n                        ...GatsbyImageSharpFluid_tracedSVG\n                        presentationWidth\n                        presentationHeight\n                    }\n                }\n            }\n        }\n    `)\n    const {phone, email, rating, customers, clients} = contactData.info.siteMetadata.contact;\n    const bg_image = contactData.bgImage.childImageSharp.fluid;\n    const contact_image = contactData.contactImg.childImageSharp.fluid;\n    \n    return (\n        <SectionWrap fluid={bg_image}>\n            <Container>\n                <Row alignitems=\"center\">\n                    <Col lg={7}>\n                        <ImageBox>\n                            <Image fluid={contact_image} alt=\"Contact Us\"/>\n                        </ImageBox>\n                    </Col>\n                    <Col lg={4} ml=\"auto\">\n                        <ContactInfoBox>\n                            <Box textalign=\"center\">\n                                {rating && <Heading as=\"h3\">{`${rating}/5.0`}</Heading>}\n                                <Ratings {...ratingStyle} rating={+rating}/>\n                                <Text {...textStyle}>by {customers}+ customers for {clients}+ clients</Text>\n                            </Box>\n                            <Box>\n                                <Anchor display=\"block\" path={`tel:${phone}`}>\n                                    <BoxIcon\n                                        {...boxIconStyle}\n                                        icon={<MdPhone/>}\n                                        heading=\"Call for advice now!\"\n                                        title={phone}\n                                    />\n                                </Anchor>\n                                <Anchor display=\"block\" path={`mailto:${email}`}>\n                                    <BoxIcon\n                                        {...boxIconStyle}\n                                        icon={<MdEmail/>}\n                                        heading=\"Say hello\"\n                                        title={email}\n                                    />\n                                </Anchor>\n                            </Box>\n                        </ContactInfoBox>\n                    </Col>\n                </Row>\n            </Container>\n        </SectionWrap>\n    )\n}\n\nContactArea.propTypes = {\n    sectionStyle: PropTypes.object\n}\n \nContactArea.defaultProps = {\n    boxIconStyle: {\n        wrapperStyle: {\n            alignitems: 'center',\n            mt: '55px'\n        },\n        iconStyle: {\n            fontSize: '40px',\n            mr: \"25px\",\n            fontweight: 300\n        },\n        titleStyle: {\n            fontSize: '34px',\n            mb: \"0\",\n            fontweight: 700,\n            lineHeight: 1.17,\n            responsive: {\n                large: {\n                    fontSize: \"24px\"\n                }\n            }\n        }\n    },\n    ratingStyle: {\n        mt: '10px',\n        mb: '10px'\n    },\n    textStyle: {\n        fontSize: '18px'\n    }\n}\n\nexport default ContactArea;","import styled, {css} from 'styled-components'\nimport {device} from '../../../theme'\n\nexport const BoxIconWrap = styled.div `\n    padding-left: ${props => props.pl};\n    margin-top: ${props => props.mt};\n    display: flex;\n    align-items: ${props => props.alignitems};\n`;\n\nexport const BoxIconMarker = styled.div `\n    margin-right: ${props => props.mr || '18px'};\n    svg{\n        font-weight: ${props => props.fontweight || 400};\n        color: ${props => props.color || props.theme.colors.secondary};    \n        font-size: ${props => props.fontSize || '24px'};\n        line-height: 1;\n    }\n`;\n\nexport const BoxIconInfo = styled.div ``;\n\nexport const BoxIconTitle = styled.h5 `\n    ${props => props.color === 'secondary' && css `\n        color: ${props => props.theme.colors.secondary};\n    `}\n    ${props => props.color !== 'secondary' && css `\n        color: ${props => props.color || props.theme.colors.themeColor};\n    `}\n    font-size: ${props => props.fontSize};\n    font-weight: ${props => props.fontweight};\n    line-height: ${props => props.lineHeight};\n    margin-bottom: ${props => props.mb};\n    ${props => props.responsive && css `\n        ${props => props.responsive.large && css `\n            @media ${device.large}{\n                font-size: ${props => props.responsive.large.fontSize};\n            }\n        `}\n        ${props => props.responsive.medium && css `\n            @media ${device.medium}{\n                font-size: ${props => props.responsive.medium.fontSize};\n            }\n        `}\n    `}\n`;\n\nexport const BoxIconHeading = styled.h6 `\n    font-size: 15px;\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    line-height: 1.78;\n    margin-bottom: 13px;\n    color: ${props => props.color};\n`;\n\nexport const BoxIconDesc = styled.p ``;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {BoxIconWrap, BoxIconMarker, BoxIconInfo, BoxIconHeading, BoxIconTitle, BoxIconDesc} from './box-icon.style'\n\nconst BoxIcon = ({icon, title, desc, heading, ...restProps}) => {\n    const {wrapperStyle, iconStyle, infoStyle, titleStyle, descStyle, headingStyle} = restProps;\n    \n    return(\n        <BoxIconWrap {...wrapperStyle}>\n            {icon && (\n                <BoxIconMarker {...iconStyle}>\n                    {icon}\n                </BoxIconMarker>\n            )}\n            {(title || desc) && (\n                <BoxIconInfo {...infoStyle}>\n                    {heading && <BoxIconHeading {...headingStyle}>{heading}</BoxIconHeading>}\n                    {title && <BoxIconTitle {...titleStyle}>{title}</BoxIconTitle>}\n                    {desc && <BoxIconDesc {...descStyle}>{desc}</BoxIconDesc>}\n                </BoxIconInfo>\n            )}\n        </BoxIconWrap>\n    )\n}\n\nBoxIcon.propTypes = {\n    wrapperStyle: PropTypes.object,\n    iconStyle: PropTypes.object,\n    infoStyle: PropTypes.object,\n    titleStyle: PropTypes.object,\n    descStyle: PropTypes.object,\n    headingStyle: PropTypes.object\n}\n\n\nexport default BoxIcon;","import React from \"react\";\nimport Img from \"gatsby-image\";\n\nconst NonStretchedImage = props => {\n    let normalizedProps = props\n    let alignment;\n    if(props.align === 'right'){\n        alignment = '0 0 0 auto'\n    } else if(props.align === 'left'){\n        alignment = '0 auto 0 0'\n    }else{\n        alignment = '0 auto'\n    }\n    \n    normalizedProps = {...normalizedProps.fluid, aspectRatio: 1}\n    if (props.fluid && props.fluid.presentationWidth) {\n        normalizedProps = {\n            ...props,\n            style: {\n                ...(props.style || {}),\n                position: props.isAbsolute ? 'absolute' : 'relative',\n                width: props.isAbsolute ? props.fluid.presentationWidth : '',\n                maxWidth: props.fluid.presentationWidth,\n                margin: alignment, \n            },\n        }\n    }   \n    return <Img {...normalizedProps} />\n}\n\nexport default NonStretchedImage;"],"sourceRoot":""}