{"version":3,"sources":["webpack:///./src/containers/blog-list-image/blog-area/blog-area.style.js","webpack:///./src/containers/blog-list-image/blog-area/index.js","webpack:///./src/pages/blogs/list-large-image.js","webpack:///./src/components/blog/pagination/pagination.style.js","webpack:///./src/components/blog/pagination/index.js"],"names":["BlogWrapper","styled","div","BlogBox","props","theme","colors","borderColor","BlogArea","blogBoxStyle","BlogQuery","blogs","allMarkdownRemark","edges","totalCount","numberOfPages","Math","ceil","map","blog","key","node","fields","slug","content","rootPage","currentPage","BlogListLargeImage","pageContext","location","restProps","sectionStyle","headingStyle","title","className","lg","span","order","xs","defaultProps","pt","pb","responsive","medium","small","as","mb","textalign","child","color","PaginationWrap","nav","PaginationList","ul","PaginationItem","li","PaginationLink","Anchor","active","css","themeColor","disabled","Pagination","isFirst","isLast","previousPage","toString","nextPage","path","classname","Array","from","length","_","i"],"mappings":"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","file":"component---src-pages-blogs-list-large-image-js-594a2ca4568be67810e9.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const BlogWrapper = styled.div ``;\r\n\r\nexport const BlogBox = styled.div `\r\n    padding-bottom: 50px;\r\n    margin-bottom: 50px;\r\n    border-bottom: 1px solid ${props => props.theme.colors.borderColor};\r\n`;","import React, {Fragment} from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Blog from '../../../components/blog/layout-two'\r\nimport Pagination from '../../../components/blog/pagination'\r\nimport {BlogWrapper, BlogBox} from './blog-area.style'\r\n\r\nconst BlogArea = ({blogBoxStyle}) => {\r\n    const BlogQuery = useStaticQuery(graphql `\r\n        query ListImageBlogQuery {\r\n            allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 6) {\r\n                totalCount\r\n                edges {\r\n                    node {\r\n                        frontmatter {\r\n                            categories\r\n                            title\r\n                            author {\r\n                                name\r\n                                image {\r\n                                    childImageSharp {\r\n                                        fixed(width: 32, height: 32, quality: 100) {\r\n                                            ...GatsbyImageSharpFixed_withWebp\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            format\r\n                            quote_text\r\n                            quote_author\r\n                            video_link\r\n                            date(formatString: \"LL\")\r\n                            featured_image {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 770, maxHeight: 420, quality: 100) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationHeight\r\n                                        presentationWidth\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        fields {\r\n                            slug\r\n                            authorId\r\n                            dateSlug\r\n                        }\r\n                        excerpt\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `)\r\n    const blogs = BlogQuery.allMarkdownRemark.edges;\r\n    const {totalCount} = BlogQuery.allMarkdownRemark;\r\n    const postsPerPage = 6;\r\n    const numberOfPages = Math.ceil(totalCount/postsPerPage);\r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper>\r\n                {blogs.map(blog => (\r\n                    <BlogBox key={blog.node.fields.slug}>\r\n                        <Blog content={blog.node} />\r\n                    </BlogBox>\r\n                ))}\r\n            </BlogWrapper>\r\n            <Pagination\r\n                rootPage=\"/blogs/list-large-image\"\r\n                currentPage={1}\r\n                numberOfPages={numberOfPages}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n \r\nexport default BlogArea;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SEO from \"../../components/seo\"\r\nimport Layout from '../../containers/layout/layout'\r\nimport Header from '../../containers/layout/header/header-one'\r\nimport Footer from '../../containers/layout/footer/footer-one'\r\nimport PageHeader from '../../components/pageheader'\r\nimport Section, {Row, Col} from '../../components/ui/wrapper'\r\nimport Heading from '../../components/ui/heading'\r\nimport Sidebar from '../../containers/blog-list-image/sidebar'\r\nimport BlogArea from '../../containers/blog-list-image/blog-area'\r\nimport CTA from '../../containers/global/cta-area/section-one'\r\n\r\nconst BlogListLargeImage = ({ pageContext, location, ...restProps }) => {\r\n    const {sectionStyle, headingStyle} = restProps;\r\n    return (\r\n        <Layout location={location}>\r\n            <SEO title=\"Blog List Large Image\" />\r\n            <Header/>\r\n            <PageHeader \r\n                pageContext={pageContext} \r\n                location={location}\r\n                title=\"Blog Update\"\r\n            />\r\n            <main className=\"site-wrapper-reveal\">\r\n                <Section {...sectionStyle}>\r\n                    <Row>\r\n                        <Col lg={{span: 4, order: 1}} xs={{span: 12, order: 2}}>\r\n                            <Sidebar/>\r\n                        </Col>\r\n                        <Col lg={{span: 8, order: 2}} xs={{span: 12, order: 1}}>\r\n                            <Heading {...headingStyle}>Interesting articles <span>updated daily</span></Heading>\r\n                            <BlogArea/>\r\n                        </Col>\r\n                    </Row>\r\n                </Section>\r\n                <CTA/>\r\n            </main>\r\n            <Footer/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nBlogListLargeImage.propTypes = {\r\n    sectionStyle: PropTypes.object\r\n}\r\n\r\nBlogListLargeImage.defaultProps = {\r\n    sectionStyle: {\r\n        pt: '89px',\r\n        pb: '100px',\r\n        responsive: {\r\n            medium: {\r\n                pt: '72px',\r\n                pb: '80px'\r\n            },\r\n            small: {\r\n                pt: '53px',\r\n                pb: '60px'\r\n            }\r\n        }\r\n    },\r\n    headingStyle: {\r\n        as: 'h3',\r\n        mb: '70px',\r\n        textalign: 'center',\r\n        child: {\r\n            color: 'primary'\r\n        },\r\n        responsive: {\r\n            medium: {\r\n                mb: '50px'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default BlogListLargeImage;","import styled, {css} from 'styled-components'\nimport Anchor from '../../ui/anchor'\n\nexport const PaginationWrap = styled.nav `\n\n`;\n\nexport const PaginationList = styled.ul `\n    padding: 0;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 700;\n    text-align: center;\n`;\n\nexport const PaginationItem = styled.li `\n    display: inline-block;\n    list-style-type: none;\n`;\n\nexport const PaginationLink = styled(Anchor) `\n    padding: 0 10px;\n    display: block;\n    text-align: center;\n    line-height: 41px;\n    min-width: 41px;\n    height: 41px;\n    text-transform: uppercase;\n    color: #ababab;\n    letter-spacing: 2px;\n    border-radius: 5px;\n    ${props => props.active && css `\n        background: #f6f2ed;\n        color: ${props => props.theme.colors.themeColor}\n    `}\n    ${props => props.disabled && css `\n        display: none;\n    `}\n`;","import React from 'react'\nimport {PaginationWrap, PaginationList, PaginationItem, PaginationLink} from './pagination.style'\n\nconst Pagination = ({currentPage, numberOfPages, rootPage}) => {\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numberOfPages;\n    const previousPage = currentPage - 1 === 1 ? rootPage : '/blog/page/' + (currentPage - 1).toString();\n    const nextPage = '/blog/page/' + (currentPage + 1).toString(); \n    return (\n        <PaginationWrap>\n            <PaginationList>\n                {isFirst ? (\n                    <PaginationItem>\n                        <PaginationLink disabled={true} path={previousPage}>Prev</PaginationLink>\n                    </PaginationItem>\n                ) : (\n                    <PaginationItem classname=\"prev\" >\n                        <PaginationLink path={previousPage}>Prev</PaginationLink>\n                    </PaginationItem>\n                )}\n                {Array.from({length: numberOfPages}, (_, i) => currentPage === i + 1 ? (\n                    <PaginationItem key={`page-number-${i+1}`}>\n                        <PaginationLink active=\"true\" path={`${rootPage}/${i === 0 ? '' : 'page/' + (i+1) }`}>\n                            {i+1}\n                        </PaginationLink>\n                    </PaginationItem>\n                ): (\n                    <PaginationItem key={`page-number-${i+1}`}>\n                        <PaginationLink path={`${i === 0 ? rootPage : '/blog/page/' + (i+1) }`}>\n                            {i+1}\n                        </PaginationLink>\n                    </PaginationItem> \n                ))}\n                {isLast ? (\n                    <PaginationItem>\n                        <PaginationLink disabled={true} path={nextPage}>Next</PaginationLink>\n                    </PaginationItem>\n                ): (\n                    <PaginationItem className=\"next\">\n                        <PaginationLink path={nextPage}>Next</PaginationLink>\n                    </PaginationItem>\n                )}\n            </PaginationList>\n        </PaginationWrap>\n    )\n}\n\nexport default Pagination;"],"sourceRoot":""}