{"version":3,"sources":["webpack:///./src/components/ui/section-title/section-title.style.js","webpack:///./src/components/ui/section-title/index.js","webpack:///./src/components/ui/client-logo/client-logo.style.js","webpack:///./src/components/ui/client-logo/index.js","webpack:///./src/containers/global/clients-area/section-one/index.js"],"names":["SectionTitleWrap","styled","div","props","align","mb","responsive","css","medium","device","small","layout","theme","colors","themeColor","SectionTitle","title","subtitle","dangerouslySetInnerHTML","__html","defaultProps","BrandLogoWrap","ClientLogo","brandImg","hoverImg","path","brandImage","hoverImage","fixed","alt","fluid","src","className","href","ClientsArea","partnersData","allPartnersJson","edges","sectionStyle","slider","sliderStyle","clientLogoWrap","lg","settings","map","data","i","key","node","id","image","childImageSharp","hover_image","pt","pb","slidesPerView","loop","speed","spaceBetween","autoplay","delay","breakpoints","320","575","767","991","1499","alignself","textalign","position"],"mappings":"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","file":"4f0a5f904eeee4003fc48f41c8027907484991e5-b5b35a149e7698dbe4ee.js","sourcesContent":["import styled, {css} from 'styled-components'\nimport {device} from '../../../theme'\n\nexport const SectionTitleWrap = styled.div `\n    text-align: ${props => props.align};\n    margin-bottom: ${props => props.mb};\n    ${props => props.responsive && css `\n        ${props => props.responsive.medium && css `\n            @media ${device.medium}{\n                margin-bottom: ${props => props.responsive.medium.mb};\n                text-align: ${props => props.responsive.medium.align};\n            }\n        `}\n        ${props => props.responsive.small && css `\n            @media ${device.small}{\n                margin-bottom: ${props => props.responsive.small.mb};\n                text-align: ${props => props.responsive.small.align};\n            }\n        `}\n    `}\n    h6{\n        color: #ababab;\n        font-weight: 400;\n        ${props => props.layout === 1 && css `\n            margin-top: -5px;\n            margin-bottom: 20px;\n            text-transform: uppercase;\n            font-size: 14px;\n            letter-spacing: 3px;\n            line-height: 1.43;\n        `}\n        ${props => props.layout === 2 && css `\n            font-size: 18px;\n        `}\n    }\n    h3{\n        ${props => props.layout === 2 && css `\n            margin-bottom: 20px;\n        `}\n        span{\n            color: ${props => props.theme.colors.themeColor};\n        }\n    }\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {SectionTitleWrap} from './section-title.style'\n\nconst SectionTitle = ({title, subtitle, layout, ...props}) => {\n    if(layout === 1){\n        return (\n            <SectionTitleWrap {...props} layout={layout}>\n                {subtitle && <h6>{subtitle}</h6>}\n                {title && <h3 dangerouslySetInnerHTML={{ __html: title}} />}\n            </SectionTitleWrap>\n        )\n    }\n    return (\n        <SectionTitleWrap {...props} layout={layout}>\n            {title && <h3 dangerouslySetInnerHTML={{ __html: title}} />}\n            {subtitle && <h6>{subtitle}</h6>}\n        </SectionTitleWrap>\n    )\n}\n\nSectionTitle.propTypes = {\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    mb: PropTypes.string\n}\n\nSectionTitle.defaultProps = {\n    align: 'center',\n    layout: 1\n}\nexport default SectionTitle;","import styled, {css} from 'styled-components';\n\nexport const BrandLogoWrap = styled.div `\n    position: relative;\n    a{\n        display: block;\n    }\n    .brand-logo__image{\n        transition: all .4s linear;\n    }\n    ${props => props.layout === 1 && css `\n        .brand-logo__image{\n            &-hover{\n                visibility: hidden;\n                opacity: 0;\n                transform: scale(0.8, 0.8);\n                transition: all .4s linear;\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n            }\n        }\n        &:hover{\n            .brand-logo__image{\n                visibility: hidden;\n                opacity: 0;\n                transform: scale(0.8, 0.8);\n                &-hover{\n                    opacity: 1;\n                    visibility: visible;\n                    transform: none;\n                }\n            }\n        }\n    `}\n\n    ${props => props.layout === 2 && css `\n        .brand-logo__image{\n            &-hover{\n                visibility: hidden;\n                opacity: 0;\n                transform: translate(-50%, 20px);\n                transition: all .4s linear;\n                position: absolute;\n                top: 0;\n                left: 50%;\n                width: 100%;\n            }\n        }\n        &:hover{\n            .brand-logo__image{\n                visibility: hidden;\n                opacity: 0;\n                transform: translateY(-20px);\n                &-hover{\n                    visibility: visible;\n                    opacity: 1;\n                    transform: translate(-50%, 0);\n                }\n            }\n        }\n    `}\n\n    ${props => props.layout === 3 && css `\n        .brand-logo__image{\n            opacity: .4;\n            &:hover{\n                opacity: 1;\n            }\n        }\n    `}\n    \n    ${props => props.layout === 4 && css `\n        .brand-logo__image{\n            opacity: 1;\n            &:hover{\n                opacity: .4;\n            }\n        }\n    `}\n`;  ","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport Image from '../../image'\nimport {BrandLogoWrap} from './client-logo.style'\n\nconst ClientLogo = ({path, brandImage, hoverImage, title, ...props}) => {\n    let brandImg;\n    let hoverImg;\n    if(brandImage.fixed && typeof brandImage.fixed !== 'function'){\n        brandImg = <Img fixed={brandImage.fixed} alt={title}/>;\n    } else if(brandImage.fluid){\n        brandImg = <Image fluid={brandImage.fluid} alt={title}/>;\n    } else {\n        brandImg = <img src={brandImage} className=\"img-fluid\" alt={title}/>\n    }\n    if(hoverImage){\n        if(hoverImage.fixed && typeof hoverImage.fixed !== 'function'){\n            hoverImg = <Img fixed={hoverImage.fixed} alt={title}/>;\n        } else if(hoverImage.fluid){\n            hoverImg = <Image fluid={hoverImage.fluid} alt={title}/>;\n        } else {\n            hoverImg = <img src={hoverImage} className=\"img-fluid\" alt={title}/>\n        }\n    }\n     \n    return (\n        <BrandLogoWrap {...props}>\n            <a href={path}>\n                <div className=\"brand-logo__image\">\n                    {brandImg}\n                </div>\n                {(props.layout === 1 || props.layout === 2) && \n                    <div className=\"brand-logo__image-hover\">\n                        {hoverImg}\n                    </div>\n                }\n            </a>\n        </BrandLogoWrap>\n    )\n}\n\nClientLogo.propTypes = {\n    path: PropTypes.string,\n    title: PropTypes.string,\n    image: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    hoverImage: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ])\n}\n\nClientLogo.defaultProps = {\n    layout: 1,\n    path: '/',\n    title: 'Brand Logo'\n}\n\nexport default ClientLogo; ","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Section, {Row, Col, Box} from '../../../../components/ui/wrapper'\nimport SwiperSlider from '../../../../components/ui/swiper'\nimport ClientLogo from '../../../../components/ui/client-logo'\n\nconst ClientsArea = (props) => {\n    const partnersQueryData = useStaticQuery(graphql `\n        query AboutPartnersDataQuery{\n            allPartnersJson {\n                edges {\n                  node {\n                    id\n                    path\n                    image {\n                      childImageSharp {\n                        fluid(quality: 100) {\n                          ...GatsbyImageSharpFluid_tracedSVG\n                          presentationWidth\n                          presentationHeight\n                          aspectRatio\n                        }\n                      }\n                    }\n                    hover_image {\n                      childImageSharp {\n                        fluid(quality: 100) {\n                            ...GatsbyImageSharpFluid_tracedSVG\n                            presentationWidth\n                            presentationHeight\n                            aspectRatio\n                        }\n                      }\n                    }\n                  }\n                }\n            }\n        }\n    `); \n    const partnersData = partnersQueryData.allPartnersJson.edges;\n    const {sectionStyle, slider, sliderStyle, clientLogoWrap} = props\n    return (\n        <Section {...sectionStyle}>\n            <Row>\n                <Col lg={12}>\n                    <SwiperSlider settings={slider} {...sliderStyle}>\n                        {partnersData.map((data, i) => {\n                            return(\n                                <Box key={data.node.id} {...clientLogoWrap}>\n                                    <ClientLogo\n                                        layout={1}\n                                        title={data.node.id}\n                                        path={data.node.path}\n                                        brandImage={data.node.image.childImageSharp}\n                                        hoverImage={data.node.hover_image.childImageSharp}\n                                    />\n                                </Box>\n                            )\n                        })}\n                    </SwiperSlider>\n                </Col>\n            </Row>\n        </Section>\n    )\n}\n\nClientsArea.propTypes = {\n    sectionStyle: PropTypes.object,\n    slider: PropTypes.object,\n    sliderStyle: PropTypes.object\n}\n\nClientsArea.defaultProps = {\n    sectionStyle: {\n        pt: '60px',\n        pb: '60px'\n    },\n    slider: {\n        slidesPerView: 6,\n        loop: true,\n        speed: 1000,\n        spaceBetween: 30,\n        autoplay: {\n            delay: 2500\n        },\n        breakpoints: {\n            320: {\n                slidesPerView : 2\n            },\n            575:{\n                slidesPerView : 3\n            },\n            767:{\n                slidesPerView : 4\n            },\n            991:{\n                slidesPerView : 5\n            },            \n            1499:{\n                slidesPerView : 6\n            }\n        }\n    },\n    sliderStyle: {\n        align: 'center'\n    },\n    clientLogoWrap: {\n        alignself: 'center',\n        textalign: 'center',\n        position: 'relative'\n    }\n}\n\nexport default ClientsArea;"],"sourceRoot":""}